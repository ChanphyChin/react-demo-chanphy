{"version":3,"sources":["logo.svg","components/test.js","components/test.1.js","store/action-types.js","components/store.js","store/actions.js","App.js","serviceWorker.js","store/reducers.js","sagas/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Test","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Component","Test1","TEST","SAGA_TEST","StoreComponent","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","add","console","log","props","test","sagaTest","map","item","name","es_button","onClick","Store","connect","state","undefined","dispatch","ownProps","type","addTest","SubMenu","Menu","Header","Layout","Content","Sider","App","defaultSelectedKeysTop","defaultSelectedKeysSide","menuChange","e","history","push","location","pathname","setState","layout","className","menu","theme","mode","defaultSelectedKeys","style","lineHeight","Item","width","background","defaultOpenKeys","height","borderRight","onSelect","title","icon","padding","breadcrumb","margin","minHeight","react_router","exact","path","component","from","to","Boolean","window","hostname","match","initState","incrementAsync","rootSage","apiFn","Promise","resolve","reject","axios","get","then","res","data","result","catch","err","regenerator_default","wrap","_context","prev","next","sent","put","stop","_marked","_context2","takeEvery","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","action","assign","applyMiddleware","run","ReactDOM","render","es","react_router_dom","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef893a0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport class Test extends Component {\n  render() {\n    return <div>test</div>\n  };\n}\n","import React, { Component } from 'react';\n\nexport class Test1 extends Component {\n  render() {\n    return <div>test 1</div>\n  };\n}\n","// 定义action类型\nexport let TEST = 'TEST';\nexport let SAGA_TEST = 'SAGA_TEST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport { addTest } from '../store/actions';\n\nexport class StoreComponent extends Component {\n  add = () => {\n    console.log(this.props.test);\n    let test = this.props.test;\n    this.props.add(test / 1 + 1);\n  };\n  render() {\n    return (\n      <div>\n        <div>test in redux is {this.props.test}</div>\n        <div>\n          {this.props.sagaTest.map(item => {\n            return item.name;\n          })}\n        </div>\n        <Button onClick={this.add}>add test</Button>\n      </div>\n    );\n  }\n}\nlet mapStateToProps = (state, ownProps = {}) => {\n  console.log(state);\n  return {\n    test: state.test,\n    sagaTest: state.sagaTest\n  };\n};\nlet mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    add: test => {\n      dispatch(addTest(test));\n    }\n  };\n};\nexport let Store = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StoreComponent);\n","import { TEST } from './action-types';\n// 定义action创建函数\nexport function addTest(test) {\n  return {\n    type: TEST,\n    test\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  Layout, Menu, Breadcrumb, Icon,\n} from 'antd';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Test, Test1, Store } from './components/index'\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nclass App extends Component {\n  state = {\n    defaultSelectedKeysTop: ['1'],\n    defaultSelectedKeysSide: []\n  }\n  menuChange = (e) => {\n    // 组件内部路由跳转\n    this.props.history.push(e.key);\n  }\n  componentWillMount() {\n    let defaultSelectedKeysSide = [];\n    // 通过this.props.location取到当前的router信息\n    defaultSelectedKeysSide.push(this.props.location.pathname);\n    this.setState({ defaultSelectedKeysSide });\n  }\n  render() {\n    return (\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={this.state.defaultSelectedKeysTop}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n        <Layout>\n          <Sider width={200} style={{ background: '#fff' }}>\n            <Menu\n              mode=\"inline\"\n              defaultSelectedKeys={this.state.defaultSelectedKeysSide}\n              defaultOpenKeys={['sub1']}\n              style={{ height: '100%', borderRight: 0 }}\n              onSelect={this.menuChange}\n            >\n              <SubMenu key=\"sub1\" title={<span><Icon type=\"user\" />subnav 1</span>}>\n                <Menu.Item key=\"/app/test\">test</Menu.Item>\n                <Menu.Item key=\"/app/test1\">test1</Menu.Item>\n                <Menu.Item key=\"/app/store\">store</Menu.Item>\n              </SubMenu>\n            </Menu>\n          </Sider>\n          <Layout style={{ padding: '0 24px 24px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n              <Breadcrumb.Item>List</Breadcrumb.Item>\n              <Breadcrumb.Item>App</Breadcrumb.Item>\n            </Breadcrumb>\n            <Content style={{\n              background: '#fff', padding: 24, margin: 0, minHeight: 280,\n            }}\n            >\n            {/*子路由的定义 react-router-dom 把父子组件的嵌套更改成在父组件里面进行管理*/}\n              <Switch>\n                <Route exact path=\"/app/test\" component={Test} />\n                <Route exact path=\"/app/test1\" component={Test1} />\n                <Route exact path=\"/app/store\" component={Store} />\n                // 路由重定向\n                <Redirect from=\"*\" to=\"/app/test\" />\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { TEST, SAGA_TEST } from './action-types';\n// 初始化state\nconst initState = {\n  test: '1',\n  sagaTest: []\n};\n// 定义reducer\nexport function testReducers(state = initState, action) {\n  switch (action.type) {\n    case TEST:\n      return Object.assign({}, state, { test: action.test });\n    case SAGA_TEST:\n      return Object.assign({}, state, { sagaTest: action.sagaTest });\n    default:\n      return state;\n  }\n}\n// 多个reducer 可以使用 combineReducers 进行reducer的合并\n","import { TEST, SAGA_TEST } from '../store/action-types';\nimport { put, all, takeEvery, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction apiFn(path) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(path)\n      .then(res => {\n        resolve(res.data.result);\n      })\n      .catch(err => {\n        reject(err);\n      });\n  });\n}\n\nfunction* incrementAsync() {\n  const result = yield call(apiFn, '/getResult');\n  yield put({ type: SAGA_TEST, sagaTest: result });\n}\n\nexport function* test() {\n  yield takeEvery(TEST, incrementAsync);\n}\n\nexport function* rootSage() {\n  console.log('hello saga');\n  yield all([test()]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// 引入react-router-dom react-router v4+ 版本抽离出来的浏览器路由管理包\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n// 引入provider 包含router，以便组件可以访问到store\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { testReducers } from './store/reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSage } from './sagas';\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware(rootSage);\n// 创建store\nlet store = createStore(testReducers, applyMiddleware(sagaMiddleware));\n// then run the saga\nsagaMiddleware.run(rootSage);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/app\" component={App} />\n        <Redirect from=\"*\" to=\"/app\" />\n      </Switch>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}